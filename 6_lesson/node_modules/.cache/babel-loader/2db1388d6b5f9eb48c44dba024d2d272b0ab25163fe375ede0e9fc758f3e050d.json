{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container pt-1\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_TheNews = _resolveComponent(\"TheNews\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, \"ActualNews \" + _toDisplayString($data.now), 1 /* TEXT */), _createElementVNode(\"div\", null, \"Has opened: \" + _toDisplayString($data.openRate), 1 /* TEXT */), _createElementVNode(\"div\", null, \"Has readed: \" + _toDisplayString($data.readRate), 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.news, function (item) {\n    return _openBlock(), _createBlock(_component_TheNews, {\n      key: _ctx.id,\n      title: item.title,\n      id: item.id,\n      isOpen: item.isOpen,\n      isRead: item.isRead,\n      onOpenNews: $options.openNews,\n      onNewsReaded: $options.markAsRead\n    }, null, 8 /* PROPS */, [\"title\", \"id\", \"isOpen\", \"isRead\", \"onOpenNews\", \"onNewsReaded\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","now","openRate","readRate","_Fragment","_renderList","news","item","_createBlock","_component_TheNews","key","_ctx","id","title","isOpen","isRead","onOpenNews","$options","openNews","onNewsReaded","markAsRead"],"sources":["D:\\Projects\\vue3-course\\6_lesson\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"container pt-1\">\r\n    <div class=\"card\">\r\n      <h2>ActualNews {{ now }}</h2>\r\n      <div>Has opened: {{ openRate }}</div>\r\n      <div>Has readed: {{ readRate }}</div>\r\n    </div>\r\n\r\n    <TheNews\r\n      v-for=\"item in news\"\r\n      :key=\"id\"\r\n      :title=\"item.title\"\r\n      :id=\"item.id\"\r\n      :isOpen=\"item.isOpen\"\r\n      :isRead=\"item.isRead\"\r\n      @openNews=\"openNews\"\r\n      @newsReaded=\"markAsRead\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TheNews from \"./TheNews.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      now: new Date().toLocaleDateString(),\r\n      news: [\r\n        { title: \"PussyDestroyer-1\", id: 100, isOpen: false, wasRead: false },\r\n        { title: \"PussyDestroyer-2\", id: 200, isOpen: false, wasRead: false },\r\n      ],\r\n      openRate: 0,\r\n      readRate: 0,\r\n    };\r\n  },\r\n  components: { TheNews },\r\n  methods: {\r\n    openNews(data) {\r\n      console.log(data);\r\n      this.openRate++;\r\n    },\r\n    markAsRead(id) {\r\n      console.log(id);\r\n      // this.news = this.news.map()\r\n      this.news.map((oneElem) => {\r\n        if (oneElem.id === id) {\r\n          oneElem.wasRead = true;\r\n        }\r\n      });\r\n      this.readRate++;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;EACO,SAAM;AAAgB;;EACpB,SAAM;AAAM;;;uBADnBA,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,mBAAA,CAIM,OAJNC,UAIM,GAHJD,mBAAA,CAA6B,YAAzB,aAAW,GAAAE,gBAAA,CAAGC,KAAA,CAAAC,GAAG,kBACrBJ,mBAAA,CAAqC,aAAhC,cAAY,GAAAE,gBAAA,CAAGC,KAAA,CAAAE,QAAQ,kBAC5BL,mBAAA,CAAqC,aAAhC,cAAY,GAAAE,gBAAA,CAAGC,KAAA,CAAAG,QAAQ,iB,sBAG9BR,mBAAA,CASES,SAAA,QAAAC,WAAA,CAReL,KAAA,CAAAM,IAAI,YAAZC,IAAI;yBADbC,YAAA,CASEC,kBAAA;MAPCC,GAAG,EAAEC,IAAA,CAAAC,EAAE;MACPC,KAAK,EAAEN,IAAI,CAACM,KAAK;MACjBD,EAAE,EAAEL,IAAI,CAACK,EAAE;MACXE,MAAM,EAAEP,IAAI,CAACO,MAAM;MACnBC,MAAM,EAAER,IAAI,CAACQ,MAAM;MACnBC,UAAQ,EAAEC,QAAA,CAAAC,QAAQ;MAClBC,YAAU,EAAEF,QAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}